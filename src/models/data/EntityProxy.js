// Generated by CoffeeScript 1.7.1
var EntityProxy;

EntityProxy = (function() {
  function EntityProxy(entity) {
    this.entity = entity != null ? entity : {};
    console.log("EntityProxy created ->name: " + entity.name);
  }

  EntityProxy.prototype.notify = function(notification) {
    if (notification == null) {
      notification = {};
    }
    return console.log("entity proxy received notification " + JSON.stringify(notification));
  };

  EntityProxy.prototype.add = function(instance, callbacks) {
    if (callbacks == null) {
      callbacks = {};
    }
    if (instance != null) {
      steroids.nativeBridge.nativeCall({
        method: "steroidsData",
        parameters: {
          method: "add",
          entity: entity,
          instance: instance
        },
        successCallbacks: [callbacks.onSuccess],
        failureCallbacks: [callbacks.onFailure]
      });
      ({
        getAll: function(instance, callbacks) {
          if (callbacks == null) {
            callbacks = {};
          }
        }
      });
    }
    if (instance != null) {
      return steroids.nativeBridge.nativeCall({
        method: "steroidsData",
        parameters: {
          method: "getAll",
          entity: entity
        },
        successCallbacks: [callbacks.onSuccess],
        failureCallbacks: [callbacks.onFailure]
      });
    }
  };

  return EntityProxy;

})();
